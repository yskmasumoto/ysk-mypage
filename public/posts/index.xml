<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ysk-mypage</title>
    <link>https://yskmasumoto.github.io/posts/</link>
    <description>Recent content in Posts on ysk-mypage</description>
    <generator>Hugo</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 22 Jul 2024 21:29:04 +0900</lastBuildDate>
    <atom:link href="https://yskmasumoto.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS Lambda Powertools Logger TypeErrorの解決</title>
      <link>https://yskmasumoto.github.io/posts/aws-powertools-logger-tips/</link>
      <pubDate>Mon, 22 Jul 2024 21:29:04 +0900</pubDate>
      <guid>https://yskmasumoto.github.io/posts/aws-powertools-logger-tips/</guid>
      <description>AWS Lambda Powertools Logger TypeErrorの解決 エラー内容 TypeError: aws_lambda_powertools.logging.logger.Logger._init_logger() got multiple values for keyword argument &amp;#39;log_level&amp;#39; エラーの原因 このエラーは通常、Loggerクラスのインスタンス化時にlog_levelパラメータが重複して指定されている場合に発生します。以下の状況で起こる可能性があります：&#xA;コード内で複数回Loggerインスタンスを作成し、それぞれでlog_levelを指定している。 環境変数LOG_LEVELが設定されている状態で、コード内でもlog_levelを指定している。 デコレータ@logger.inject_lambda_contextでlog_levelを指定し、同時にLoggerインスタンス作成時にも指定している。 解決方法 1. Loggerインスタンスの一元管理 アプリケーション全体で単一のLoggerインスタンスを使用します。 可能な限り、Loggerインスタンスを作成する場所を1箇所に限定します。 from aws_lambda_powertools import Logger logger = Logger() # 他のモジュールやクラスでこのloggerを再利用 2. 環境変数の活用 LOG_LEVEL環境変数を使用してログレベルを制御します。 コード内でlog_levelを指定する代わりに、環境変数に依存します。 # 環境変数 LOG_LEVEL を設定し、コードでは指定しない logger = Logger() 3. デコレータの適切な使用 @logger.inject_lambda_contextデコレータを使用する場合、デコレータ内でlog_levelを指定せず、Loggerインスタンス化時にのみ指定します。 logger = Logger(log_level=&amp;#34;INFO&amp;#34;) @logger.inject_lambda_context(log_event=True) def handler(event, context): logger.info(&amp;#34;This is an info message&amp;#34;) 4. 依存性注入パターンの採用 Loggerインスタンスを外部から注入できるようにクラスを設計します。 class SQS: def __init__(self, queue_url: str, logger: Logger = None): self.</description>
    </item>
  </channel>
</rss>
